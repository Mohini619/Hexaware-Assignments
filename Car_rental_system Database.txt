									Coding Challenge - Car Rental System â€“ SQL


Vehicle Table:

->CREATE TABLE Vehicle ( vehicleID INT PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year
INT, dailyRate DECIMAL(10, 2), status ENUM('available', 'notAvailable'), passengerCapacity INT, 
engineCapacity INT ); 

Customers Table:

->CREATE TABLE Customers ( customerID INT PRIMARY KEY, firstName VARCHAR(255), lastName 
VARCHAR(255), email VARCHAR(255), phoneNumber VARCHAR(15) ); 

Lease Table:

->CREATE TABLE Lease ( leaseID INT PRIMARY KEY, vehicleID INT, customerID INT, startDate DATE, 
endDate DATE, leaseType ENUM('Daily', 'Monthly'), FOREIGN KEY (vehicleID) REFERENCES
Vehicle(vehicleID), FOREIGN KEY (customerID) REFERENCES Customer(customerID) ); 

Payment Table:

->CREATE TABLE Payment ( paymentID INT PRIMARY KEY, leaseID INT, paymentDate DATE, amount 
DECIMAL(10, 2), FOREIGN KEY (leaseID) REFERENCES Lease(leaseID) );
 

--->Insertion Of Values:

Vehicle Table:

->INSERT INTO Vehicle (vehicleID, make, model, year, dailyRate, status, passengerCapacity, 
engineCapacity) VALUES
(1, 'Toyota', 'Camry', 2022, 50.00, 'available', 4, 1450),
(2, 'Honda', 'Civic', 2023, 45.00, 'available', 7, 1500),
(3, 'Ford', 'Focus', 2022, 48.00, 'notAvailable', 4, 1400),
(4, 'Nissan', 'Altima', 2023, 52.00, 'available', 7, 1200),
(5, 'Chevrolet', 'Malibu', 2022, 47.00, 'available', 4, 1800),
(6, 'Hyundai', 'Sonata', 2023, 49.00, 'notAvailable', 7, 1400),
(7, 'BMW', '3 Series', 2023, 60.00, 'available', 7, 2499),
(8, 'Mercedes', 'C-Class', 2022, 58.00, 'available', 8, 2599),
(9, 'Audi', 'A4', 2022, 55.00, 'notAvailable', 4, 2500),
(10, 'Lexus', 'ES', 2023, 54.00, 'available', 4, 2500);


Customers Table:

->INSERT INTO Customers (customerID, firstName, lastName, email, phoneNumber) VALUES
(1, 'John', 'Doe', 'johndoe@example.com', '555-555-5555'),
(2, 'Jane', 'Smith', 'janesmith@example.com', '555-123-4567'),
(3, 'Robert', 'Johnson', 'robert@example.com', '555-789-1234'),
(4, 'Sarah', 'Brown', 'sarah@example.com', '555-456-7890'),
(5, 'David', 'Lee', 'david@example.com', '555-987-6543'),
(6, 'Laura', 'Hall', 'laura@example.com', '555-234-5678'),
(7, 'Michael', 'Davis', 'michael@example.com', '555-876-5432'),
(8, 'Emma', 'Wilson', 'emma@example.com', '555-432-1098'),
(9, 'William', 'Taylor', 'william@example.com', '555-321-6547'),
(10, 'Olivia', 'Adams', 'olivia@example.com', '555-765-4321');


Lease Table:

->INSERT INTO Lease (leaseID, vehicleID, customerID, startDate, endDate, leaseType) VALUES
(1, 1, 1, '2023-01-01', '2023-01-05', 'Daily'),
(2, 2, 2, '2023-02-15', '2023-02-28', 'Monthly'),
(3, 3, 3, '2023-03-10', '2023-03-15', 'Daily'),
(4, 4, 4, '2023-04-20', '2023-04-30', 'Monthly'),
(5, 5, 5, '2023-05-05', '2023-05-10', 'Daily'),
(6, 4, 3, '2023-06-15', '2023-06-30', 'Monthly'),
(7, 7, 7, '2023-07-01', '2023-07-10', 'Daily'),
(8, 8, 8, '2023-08-12', '2023-08-15', 'Monthly'),
(9, 3, 3, '2023-09-07', '2023-09-10', 'Daily'),
(10, 10, 10, '2023-10-10', '2023-10-31', 'Monthly');


Payments Table:

->INSERT INTO Payment (paymentID, leaseID, paymentDate, amount) VALUES
(1, 1, '2023-01-03', 200.00),
(2, 2, '2023-02-20', 1000.00),
(3, 3, '2023-03-12', 75.00),
(4, 4, '2023-04-25', 900.00),
(5, 5, '2023-05-07', 60.00),
(6, 6, '2023-06-18', 1200.00),
(7, 7, '2023-07-03', 40.00),
(8, 8, '2023-08-14', 1100.00),
(9, 9, '2023-09-09', 80.00),
(10, 10, '2023-10-25', 1500.00);






1. Update the daily rate for a Mercedes car to 68.

->UPDATE Vehicle SET dailyRate = 68 WHERE make = 'Mercedes';


2. Delete a specific customer and all associated leases and payments.

->DELETE FROM Payment WHERE leaseID IN ( SELECT leaseID FROM Lease WHERE customerID = 2 ); 
->DELETE FROM Lease WHERE customerID = 2; DELETE FROM Customers WHERE customerID = 2;


3. Rename the "paymentDate" column in the Payment table to "transactionDate".

->ALTER TABLE Payment CHANGE COLUMN paymentDate transactionDate DATE;


4. Find a specific customer by email.

->SELECT * FROM Customers WHERE email = 'laura@example.com';
+------------+-----------+----------+-------------------+--------------+
| customerID | firstName | lastName | email             | phoneNumber  |
+------------+-----------+----------+-------------------+--------------+
|          6 | Laura     | Hall     | laura@example.com | 555-234-5678 |
+------------+-----------+----------+-------------------+--------------+


5. Get active leases for a specific customer.

-> SELECT * FROM Lease WHERE customerID = 1 AND CURDATE() BETWEEN startDate AND endDate;
Empty set (0.01 sec)


6. Find all payments made by a customer with a specific phone number.

-> select * from payment where leaseid in( select l.leaseid from lease l,customers c where l.customerid=c.customerid and c.phoneNumber='555-987-6543');
+-----------+---------+-----------------+--------+
| paymentID | leaseID | transactionDate | amount |
+-----------+---------+-----------------+--------+
|         5 |       5 | 2023-05-07      |  60.00 |
+-----------+---------+-----------------+--------+


7. Calculate the average daily rate of all available cars.

-> SELECT AVG(dailyRate) AS averageDailyRate FROM Vehicle WHERE status = 'available';
+------------------+
| averageDailyRate |
+------------------+
|        53.714286 |
+------------------+


8. Find the car with the highest daily rate.

-> SELECT * FROM Vehicle ORDER BY dailyRate DESC LIMIT 1;
+-----------+----------+---------+------+-----------+-----------+-------------------+----------------+
| vehicleID | make     | model   | year | dailyRate | status    | passengerCapacity | engineCapacity |
+-----------+----------+---------+------+-----------+-----------+-------------------+----------------+
|         8 | Mercedes | C-Class | 2022 |     68.00 | available |                 8 |           2599 |
+-----------+----------+---------+------+-----------+-----------+-------------------+----------------+


9. Retrieve all cars leased by a specific customer.

-> SELECT Vehicle.* FROM Vehicle JOIN Lease ON Vehicle.vehicleID = Lease.vehicleID WHERE
    -> Lease.customerID = 1;
+-----------+--------+-------+------+-----------+-----------+-------------------+----------------+
| vehicleID | make   | model | year | dailyRate | status    | passengerCapacity | engineCapacity |
+-----------+--------+-------+------+-----------+-----------+-------------------+----------------+
|         1 | Toyota | Camry | 2022 |     50.00 | available |                 4 |           1450 |
+-----------+--------+-------+------+-----------+-----------+-------------------+----------------+


10. Find the details of the most recent lease.

->SELECT * FROM Lease ORDER BY endDate DESC LIMIT 1;
+---------+-----------+------------+------------+------------+-----------+
| leaseID | vehicleID | customerID | startDate  | endDate    | leaseType |
+---------+-----------+------------+------------+------------+-----------+
|      10 |        10 |         10 | 2023-10-10 | 2023-10-31 | Monthly   |
+---------+-----------+------------+------------+------------+-----------+


11. List all payments made in the year 2023.

-> SELECT * FROM Payment WHERE YEAR(transactionDate) = 2023;
+-----------+---------+-----------------+---------+
| paymentID | leaseID | transactionDate | amount  |
+-----------+---------+-----------------+---------+
|         1 |       1 | 2023-01-03      |  200.00 |
|         4 |       4 | 2023-04-25      |  900.00 |
|         5 |       5 | 2023-05-07      |   60.00 |
|         7 |       7 | 2023-07-03      |   40.00 |
|         8 |       8 | 2023-08-14      | 1100.00 |
|        10 |      10 | 2023-10-25      | 1500.00 |
+-----------+---------+-----------------+---------+


12. Retrieve customers who have not made any payments.

-> SELECT Customer.* FROM Customer LEFT JOIN Lease ON Customer.customerID = Lease.customerID
   LEFT JOIN Payment ON Lease.leaseID = Payment.leaseID WHERE Payment.paymentID IS NULL;
Empty set (0.01 sec)


13. Retrieve Car Details and Their Total Payments.

->SELECT Vehicle.*, SUM(Payment.amount) AS totalPayments FROM Vehicle JOIN Lease ON
  Vehicle.vehicleID = Lease.vehicleID JOIN Payment ON Lease.leaseID = Payment.leaseID GROUP BY
  Vehicle.vehicleID;
+-----------+-----------+----------+------+-----------+-----------+-------------------+----------------+---------------+
| vehicleID | make      | model    | year | dailyRate | status    | passengerCapacity | engineCapacity | totalPayments |
+-----------+-----------+----------+------+-----------+-----------+-------------------+----------------+---------------+
|         1 | Toyota    | Camry    | 2022 |     50.00 | available |                 4 |           1450 |        200.00 |
|         4 | Nissan    | Altima   | 2023 |     52.00 | available |                 7 |           1200 |        900.00 |
|         5 | Chevrolet | Malibu   | 2022 |     47.00 | available |                 4 |           1800 |         60.00 |
|         7 | BMW       | 3 Series | 2023 |     60.00 | available |                 7 |           2499 |         40.00 |
|         8 | Mercedes  | C-Class  | 2022 |     68.00 | available |                 8 |           2599 |       1100.00 |
|        10 | Lexus     | ES       | 2023 |     54.00 | available |                 4 |           2500 |       1500.00 |
+-----------+-----------+----------+------+-----------+-----------+-------------------+----------------+---------------+


14. Calculate Total Payments for Each Customer.

->SELECT Customers.customerID, SUM(Payment.amount) AS totalPayments FROM Customers JOIN Lease
  ON Customers.customerID = Lease.customerID JOIN Payment ON Lease.leaseID = Payment.leaseID
  GROUP BY Customers.customerID;
+------------+---------------+
| customerID | totalPayments |
+------------+---------------+
|          1 |        200.00 |
|          4 |        900.00 |
|          5 |         60.00 |
|          7 |         40.00 |
|          8 |       1100.00 |
|         10 |       1500.00 |
+------------+---------------+


15. List Car Details for Each Lease.

-> SELECT Lease.leaseID, Vehicle.* FROM Lease JOIN Vehicle ON Lease.vehicleID = Vehicle.vehicleID;
+---------+-----------+-----------+----------+------+-----------+--------------+-------------------+----------------+
| leaseID | vehicleID | make      | model    | year | dailyRate | status       | passengerCapacity | engineCapacity |
+---------+-----------+-----------+----------+------+-----------+--------------+-------------------+----------------+
|       1 |         1 | Toyota    | Camry    | 2022 |     50.00 | available    |                 4 |           1450 |
|       3 |         3 | Ford      | Focus    | 2022 |     48.00 | notAvailable |                 4 |           1400 |
|       9 |         3 | Ford      | Focus    | 2022 |     48.00 | notAvailable |                 4 |           1400 |
|       4 |         4 | Nissan    | Altima   | 2023 |     52.00 | available    |                 7 |           1200 |
|       6 |         4 | Nissan    | Altima   | 2023 |     52.00 | available    |                 7 |           1200 |
|       5 |         5 | Chevrolet | Malibu   | 2022 |     47.00 | available    |                 4 |           1800 |
|       7 |         7 | BMW       | 3 Series | 2023 |     60.00 | available    |                 7 |           2499 |
|       8 |         8 | Mercedes  | C-Class  | 2022 |     68.00 | available    |                 8 |           2599 |
|      10 |        10 | Lexus     | ES       | 2023 |     54.00 | available    |                 4 |           2500 |
+---------+-----------+-----------+----------+------+-----------+--------------+-------------------+----------------+


16. Retrieve Details of Active Leases with Customer and Car Information.

->SELECT Lease.*, Customers.*, Vehicle.* FROM Lease JOIN Customers ON Lease.customerID =
  Customers.customerID JOIN Vehicle ON Lease.vehicleID = Vehicle.vehicleID WHERE CURDATE()
  BETWEEN Lease.startDate AND Lease.endDate;
 
Empty set (0.01 sec)


17. Find the Customer Who Has Spent the Most on Leases.

->SELECT Customers.customerID, SUM(Payment.amount) AS totalSpent FROM Customers JOIN Lease ON
  Customers.customerID = Lease.customerID JOIN Payment ON Lease.leaseID = Payment.leaseID
  GROUP BY Customers.customerID ORDER BY totalSpent DESC LIMIT 1;
+------------+------------+
| customerID | totalSpent |
+------------+------------+
|         10 |    1500.00 |
+------------+------------+


18. List All Cars with Their Current Lease Information

->SELECT Vehicle.*, Lease.* FROM Vehicle LEFT JOIN Lease ON Vehicle.vehicleID = Lease.vehicleID AND
  CURDATE() BETWEEN Lease.startDate AND Lease.endDate;
+-----------+-----------+----------+------+-----------+--------------+-------------------+----------------+---------+-----------+------------+-----------+---------+-----------+
| vehicleID | make      | model    | year | dailyRate | status       | passengerCapacity | engineCapacity | leaseID | vehicleID | customerID | startDate | endDate | leaseType |
+-----------+-----------+----------+------+-----------+--------------+-------------------+----------------+---------+-----------+------------+-----------+---------+-----------+
|         1 | Toyota    | Camry    | 2022 |     50.00 | available    |                 4 |           1450 |    NULL |      NULL |       NULL | NULL      | NULL    | NULL      |
|         2 | Honda     | Civic    | 2023 |     45.00 | available    |                 7 |           1500 |    NULL |      NULL |       NULL | NULL      | NULL    | NULL      |
|         3 | Ford      | Focus    | 2022 |     48.00 | notAvailable |                 4 |           1400 |    NULL |      NULL |       NULL | NULL      | NULL    | NULL      |
|         4 | Nissan    | Altima   | 2023 |     52.00 | available    |                 7 |           1200 |    NULL |      NULL |       NULL | NULL      | NULL    | NULL      |
|         5 | Chevrolet | Malibu   | 2022 |     47.00 | available    |                 4 |           1800 |    NULL |      NULL |       NULL | NULL      | NULL    | NULL      |
|         6 | Hyundai   | Sonata   | 2023 |     49.00 | notAvailable |                 7 |           1400 |    NULL |      NULL |       NULL | NULL      | NULL    | NULL      |
|         7 | BMW       | 3 Series | 2023 |     60.00 | available    |                 7 |           2499 |    NULL |      NULL |       NULL | NULL      | NULL    | NULL      |
|         8 | Mercedes  | C-Class  | 2022 |     68.00 | available    |                 8 |           2599 |    NULL |      NULL |       NULL | NULL      | NULL    | NULL      |
|         9 | Audi      | A4       | 2022 |     55.00 | notAvailable |                 4 |           2500 |    NULL |      NULL |       NULL | NULL      | NULL    | NULL      |
|        10 | Lexus     | ES       | 2023 |     54.00 | available    |                 4 |           2500 |    NULL |      NULL |       NULL | NULL      | NULL    | NULL      |
+-----------+-----------+----------+------+-----------+--------------+-------------------+----------------+---------+-----------+------------+-----------+---------+-----------+